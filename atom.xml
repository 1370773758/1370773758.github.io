<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hexo</title>
  
  
  <link href="https://1370773758.github.io/atom.xml" rel="self"/>
  
  <link href="https://1370773758.github.io/"/>
  <updated>2024-01-14T16:03:46.770Z</updated>
  <id>https://1370773758.github.io/</id>
  
  <author>
    <name>吴金洲</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>红外的NEC协议使用</title>
    <link href="https://1370773758.github.io/2024/01/14/%E7%BA%A2%E5%A4%96%E7%9A%84NEC%E5%8D%8F%E8%AE%AE%E4%BD%BF%E7%94%A8/index/"/>
    <id>https://1370773758.github.io/2024/01/14/%E7%BA%A2%E5%A4%96%E7%9A%84NEC%E5%8D%8F%E8%AE%AE%E4%BD%BF%E7%94%A8/index/</id>
    <published>2024-01-14T15:33:04.000Z</published>
    <updated>2024-01-14T16:03:46.770Z</updated>
    
    <content type="html"><![CDATA[<h2 id="红外-NEC"><a href="#红外-NEC" class="headerlink" title="红外 NEC"></a>红外 NEC</h2><p>公司之前使用的红外是使用ST库中的串口红外协议，协议层是由库来完成，而使用只需要像使用串口那样使用。而新项目中使用的接收头是由成本更低的元器件来实现，不能像之前使用串口红外的协议，原因是接收头协议不兼容，使用IRDA协议的话波形会被滤掉，而接收头接收的时38KHz的载波为低电平，LED为发送端。</p><span id="more"></span><h2 id="NEC红外协议"><a href="#NEC红外协议" class="headerlink" title="NEC红外协议"></a>NEC红外协议</h2><p>NEC协议部分主要由 引导码、用户码、用户反码、数据码、数据反码、结束码 组成</p><h3 id="NEC-数据码"><a href="#NEC-数据码" class="headerlink" title="NEC 数据码"></a>NEC 数据码</h3><p><img src="/%E7%BA%A2%E5%A4%96%E7%9A%84NEC%E5%8D%8F%E8%AE%AE%E4%BD%BF%E7%94%A8/nec%E6%95%B0%E6%8D%AE%E7%A0%810%E5%92%8C1.jpg" alt="数据码原理"></p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;红外-NEC&quot;&gt;&lt;a href=&quot;#红外-NEC&quot; class=&quot;headerlink&quot; title=&quot;红外 NEC&quot;&gt;&lt;/a&gt;红外 NEC&lt;/h2&gt;&lt;p&gt;公司之前使用的红外是使用ST库中的串口红外协议，协议层是由库来完成，而使用只需要像使用串口那样使用。而新项目中使用的接收头是由成本更低的元器件来实现，不能像之前使用串口红外的协议，原因是接收头协议不兼容，使用IRDA协议的话波形会被滤掉，而接收头接收的时38KHz的载波为低电平，LED为发送端。&lt;/p&gt;</summary>
    
    
    
    
    <category term="STM32" scheme="https://1370773758.github.io/tags/STM32/"/>
    
    <category term="红外" scheme="https://1370773758.github.io/tags/%E7%BA%A2%E5%A4%96/"/>
    
  </entry>
  
  <entry>
    <title>pcb无人机</title>
    <link href="https://1370773758.github.io/2023/08/14/pcb%E6%97%A0%E4%BA%BA%E6%9C%BA/"/>
    <id>https://1370773758.github.io/2023/08/14/pcb%E6%97%A0%E4%BA%BA%E6%9C%BA/</id>
    <published>2023-08-14T00:44:52.000Z</published>
    <updated>2023-08-14T00:44:52.877Z</updated>
    
    
    
    
    
  </entry>
  
  <entry>
    <title>学习资料</title>
    <link href="https://1370773758.github.io/2022/10/31/%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99/"/>
    <id>https://1370773758.github.io/2022/10/31/%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99/</id>
    <published>2022-10-31T14:11:28.556Z</published>
    <updated>2022-10-31T14:13:12.504Z</updated>
    
    <content type="html"><![CDATA[<span id="more"></span><!-- more --><h2 id="材料力学与理论力学复习资料"><a href="#材料力学与理论力学复习资料" class="headerlink" title="材料力学与理论力学复习资料"></a>材料力学与理论力学复习资料</h2><p>链接：<a href="https://pan.baidu.com/s/1uQcsjgAGwEPVg5H1iDhlKA">https://pan.baidu.com/s/1uQcsjgAGwEPVg5H1iDhlKA</a><br>提取码：nfn9<br>–来自百度网盘超级会员V3的分享</p>]]></content>
    
    
      
      
    <summary type="html">&lt;span id=&quot;more&quot;&gt;&lt;/span&gt;
&lt;!-- more --&gt;


&lt;h2 id=&quot;材料力学与理论力学复习资料&quot;&gt;&lt;a href=&quot;#材料力学与理论力学复习资料&quot; class=&quot;headerlink&quot; title=&quot;材料力学与理论力学复习资料&quot;&gt;&lt;/a&gt;材料力学与理论</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>记录本</title>
    <link href="https://1370773758.github.io/2022/10/16/%E8%AE%B0%E5%BD%95%E6%9C%AC/"/>
    <id>https://1370773758.github.io/2022/10/16/%E8%AE%B0%E5%BD%95%E6%9C%AC/</id>
    <published>2022-10-16T15:43:24.330Z</published>
    <updated>2022-10-18T03:10:39.702Z</updated>
    
    <content type="html"><![CDATA[<h2 id="网站"><a href="#网站" class="headerlink" title="网站"></a>网站</h2><p>vpn节点<br><a href="https://dy.justcn2.top/user">https://dy.justcn2.top/user</a><br>zlibrary<br><a href="https://zlibrary.ga/">https://zlibrary.ga/</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;网站&quot;&gt;&lt;a href=&quot;#网站&quot; class=&quot;headerlink&quot; title=&quot;网站&quot;&gt;&lt;/a&gt;网站&lt;/h2&gt;&lt;p&gt;vpn节点&lt;br&gt;&lt;a href=&quot;https://dy.justcn2.top/user&quot;&gt;https://dy.justcn2.top/</summary>
      
    
    
    
    
    <category term="日常" scheme="https://1370773758.github.io/tags/%E6%97%A5%E5%B8%B8/"/>
    
  </entry>
  
  <entry>
    <title>移植arm_math</title>
    <link href="https://1370773758.github.io/2022/03/27/%E7%A7%BB%E6%A4%8Darm_math.h/"/>
    <id>https://1370773758.github.io/2022/03/27/%E7%A7%BB%E6%A4%8Darm_math.h/</id>
    <published>2022-03-27T08:58:38.785Z</published>
    <updated>2022-03-27T09:31:03.542Z</updated>
    
    <content type="html"><![CDATA[<video src="https://gitee.com/q1370773758/photo-and-camera/tree/master/01/text.mp4" position="absolute" width="100%" height="100%" controls="controls"></video>]]></content>
    
    
      
      
    <summary type="html">
&lt;video src=&quot;https://gitee.com/q1370773758/photo-and-camera/tree/master/01/text.mp4&quot; position=&quot;absolute&quot; width=&quot;100%&quot; height=&quot;100%&quot; controls</summary>
      
    
    
    
    
    <category term="STM32" scheme="https://1370773758.github.io/tags/STM32/"/>
    
    <category term="HAL库" scheme="https://1370773758.github.io/tags/HAL%E5%BA%93/"/>
    
  </entry>
  
  <entry>
    <title>舵轮代码解读</title>
    <link href="https://1370773758.github.io/2022/03/26/%E5%A7%9A%E8%88%B5%E8%BD%AE%E4%BB%A3%E7%A0%81/"/>
    <id>https://1370773758.github.io/2022/03/26/%E5%A7%9A%E8%88%B5%E8%BD%AE%E4%BB%A3%E7%A0%81/</id>
    <published>2022-03-26T02:46:10.457Z</published>
    <updated>2024-01-14T15:37:53.653Z</updated>
    
    <content type="html"><![CDATA[<h2 id="舵轮代码"><a href="#舵轮代码" class="headerlink" title="舵轮代码"></a>舵轮代码</h2><p>目前代码给我印象是各个轮子分开控制，和1代舵轮一样都是无优弧劣弧处理，反转需要舵转动180°。3轮头舵轮做转向作用。无运动模型，就是代码判断赋值，在某些情况下能做到更好的处理，但感觉移植性没那么好，等我有空把他代码也做一个总结。</p><p>运行时操作手感不是很好，有种急停急开的感觉，还得优化。<br>贴上部分代码。</p><h3 id="遥控器转比例值"><a href="#遥控器转比例值" class="headerlink" title="遥控器转比例值"></a>遥控器转比例值</h3><p>无运动模型，将遥控器的数值转换成速度和角度的比例，再运算赋值给底盘。<br>z:没什么意义，如果有运动模型的话就不用后面那么多处理，还得想着多层逻辑的叠加。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line">  * @brief  DR16接收的数据转化为角度和速度比</span><br><span class="line">  * @retval None</span><br><span class="line">  */</span><br><span class="line">void D16DataCalculate(void)   </span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">float</span> Max_Value = 660;</span><br><span class="line"><span class="keyword">if</span>(dr16_data.rc.s_left != 0)&#123;                </span><br><span class="line">dr16_motion_value.Left = dr16_data.rc.s_left;</span><br><span class="line">&#125;<span class="keyword">if</span>(dr16_data.rc.s_right != 0)&#123;</span><br><span class="line">dr16_motion_value.Right = dr16_data.rc.s_right;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(fabs((<span class="built_in">float</span>)dr16_data.rc.ch2_LX) ==1024) </span><br><span class="line">dr16_data.rc.ch2_LX = 0;</span><br><span class="line"><span class="keyword">if</span>(fabs((<span class="built_in">float</span>)dr16_data.rc.ch3_LY)== 1024)</span><br><span class="line">dr16_data.rc.ch3_LY = 0;</span><br><span class="line"><span class="built_in">float</span> z = sqrt(powf(dr16_data.rc.ch2_LX,2) + powf(dr16_data.rc.ch3_LY,2)); </span><br><span class="line">/*将速度值转化为百分比</span><br><span class="line">*/</span><br><span class="line"><span class="keyword">if</span>(z&gt;=660)&#123;</span><br><span class="line">dr16_motion_value.CSpeed = 1;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">dr16_motion_value.CSpeed = z/Max_Value;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">dr16_motion_value.LastAngle = dr16_motion_value.CAngle;</span><br><span class="line">// 遥控器转换成角度值</span><br><span class="line"><span class="keyword">if</span>(dr16_data.rc.ch2_LX&gt;0&amp;&amp;dr16_data.rc.ch3_LY&gt;=0)&#123;</span><br><span class="line">dr16_motion_value.CAngle = acos(fabsf((<span class="built_in">float</span>)dr16_data.rc.ch2_LX)/z)*180.0/3.1416; </span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(dr16_data.rc.ch2_LX&lt;=0&amp;&amp;dr16_data.rc.ch3_LY&gt;0)&#123;</span><br><span class="line">dr16_motion_value.CAngle = acos(fabsf((<span class="built_in">float</span>)dr16_data.rc.ch3_LY)/z)*180.0/3.1416 + 90.0;</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(dr16_data.rc.ch2_LX&lt;0&amp;&amp;dr16_data.rc.ch3_LY&lt;=0)&#123;</span><br><span class="line">dr16_motion_value.CAngle = acos(fabsf((<span class="built_in">float</span>)dr16_data.rc.ch2_LX)/z)*180.0/3.1416 + 180.0;</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(dr16_data.rc.ch2_LX&gt;=0&amp;&amp;dr16_data.rc.ch3_LY&lt;0)&#123;</span><br><span class="line">dr16_motion_value.CAngle = acos(fabsf((<span class="built_in">float</span>)dr16_data.rc.ch3_LY)/z)*180.0/3.1416 + 270.0;</span><br><span class="line">&#125;</span><br><span class="line">/*多圈旋转判断</span><br><span class="line">*/</span><br><span class="line"> dr16_motion_value.AngleVariationV = dr16_motion_value.LastAngle - dr16_motion_value.CAngle;</span><br><span class="line"><span class="keyword">if</span>(dr16_motion_value.AngleVariationV &lt;= -270)&#123;  </span><br><span class="line">RondNumber -= 1;</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(dr16_motion_value.AngleVariationV &gt;= 270)&#123;</span><br><span class="line">RondNumber += 1;</span><br><span class="line">&#125;</span><br><span class="line">//<span class="keyword">else</span> dr16_motion_value.CAngle = 0;</span><br><span class="line"></span><br><span class="line">  /*摇杆的旋转值转化为百分比</span><br><span class="line">*/</span><br><span class="line">dr16_motion_value.CRotate = dr16_data.rc.ch0_RX/Max_Value;</span><br><span class="line"></span><br><span class="line">//<span class="keyword">if</span>(dr16_data.rc.ch3_LY&lt;0) dr16_motion_value.CSpeed *= -1.0;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="自旋量"><a href="#自旋量" class="headerlink" title="自旋量"></a>自旋量</h3><p>自旋是自旋 前进是前进，无角度叠加。<br>控制的想法跟我完全不一样，前面提的速度运动一定跑不直，要改成全场定位控制也没有。<br>全场定位的用处就只是用来控制自动。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(fabs(dr16_motion_value.CRotate) &gt; 0.2 &amp;&amp; fabs(dr16_motion_value.CSpeed)&lt;0.2)&#123;     //当只有右摇杆控制时可进行原地旋转</span><br><span class="line">RPM = MaxRPM*(fabs(dr16_motion_value.CRotate)-0.2); //旋转赋值</span><br><span class="line"><span class="keyword">if</span>(dr16_motion_value.CRotate&gt;0)&#123;      //右摇杆控向右打时</span><br><span class="line">SendSWAngle(0,135,45);</span><br><span class="line">SW_RPM_Move(RPM,RPM,RPM * -1.0);</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(dr16_motion_value.CRotate&lt;0)&#123;    //右摇杆控向左打时</span><br><span class="line">SendSWAngle(0,135,45);</span><br><span class="line">SW_RPM_Move(RPM * -1.0,RPM * -1.0,RPM);</span><br><span class="line">&#125;</span><br><span class="line">RPM = 0;</span><br></pre></td></tr></table></figure><h3 id="运动模型"><a href="#运动模型" class="headerlink" title="运动模型"></a>运动模型</h3><p>由多个if判断组成的运动模型，判断是否相应的模型</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(fabs(dr16_motion_value.CSpeed) &gt; 0.2)&#123;     //左摇杆对底盘方向的控制</span><br><span class="line"><span class="keyword">if</span>(dr16_motion_value.AngleVariationV&gt;90 &amp;&amp; dr16_motion_value.AngleVariationV&lt;180)&#123;</span><br><span class="line"><span class="keyword">if</span>(AngleAdd == 180)&#123;</span><br><span class="line">AngleAdd = 0;</span><br><span class="line">&#125;<span class="keyword">else</span> AngleAdd = 180;</span><br><span class="line">SpeedOrienta = SpeedOrienta * -1;</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(dr16_motion_value.AngleVariationV &lt; -90&amp;&amp;dr16_motion_value.AngleVariationV &gt; -180)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(AngleAdd == -180)&#123;</span><br><span class="line">AngleAdd = 0;</span><br><span class="line">&#125;<span class="keyword">else</span> AngleAdd = -180;</span><br><span class="line">SpeedOrienta = SpeedOrienta * -1;</span><br><span class="line">&#125;</span><br><span class="line">//前轮微小  就是把自旋改成前轮转向，后面两个轮子做差速的三轮车模型</span><br><span class="line"><span class="keyword">if</span>(dr16_motion_value.CAngle&gt;60 &amp;&amp; dr16_motion_value.CAngle &lt; 120)&#123;     //当在跑直线时可用右摇杆对前轮角度进行微小</span><br><span class="line">SpeedAdd = (<span class="built_in">float</span>)0.2 * MaxRPM * dr16_motion_value.CRotate;   //调整时后面两轮做速度差</span><br><span class="line">SendSWAngle(dr16_motion_value.CAngle - (AdjustAngle*dr16_motion_value.CRotate),dr16_motion_value.CAngle,dr16_motion_value.CAngle);</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(dr16_motion_value.CAngle&gt;240 &amp;&amp; dr16_motion_value.CAngle &lt; 300)&#123;     //当在跑直线时可用右摇杆对前轮角度进行微小</span><br><span class="line">SpeedAdd = (<span class="built_in">float</span>)0.2 * MaxRPM * dr16_motion_value.CRotate * (<span class="built_in">float</span>)-1.0;   //调整时后面两轮做速度差</span><br><span class="line">SendSWAngle(dr16_motion_value.CAngle - (AdjustAngle*dr16_motion_value.CRotate),dr16_motion_value.CAngle,dr16_motion_value.CAngle);</span><br><span class="line">&#125;<span class="keyword">else</span> &#123; </span><br><span class="line">SendSWAngle(dr16_motion_value.CAngle+AngleAdd,dr16_motion_value.CAngle+AngleAdd,dr16_motion_value.CAngle+AngleAdd);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(dr16_motion_value.CSpeed &gt; 0)&#123;</span><br><span class="line">RPM = MaxRPM*(dr16_motion_value.CSpeed -(<span class="built_in">float</span>)0.2);</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(dr16_motion_value.CSpeed&lt;0)&#123;</span><br><span class="line">RPM = MaxRPM*(dr16_motion_value.CSpeed + (<span class="built_in">float</span>)0.2);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">SW_RPM_Move(RPM*SpeedOrienta ,(RPM + SpeedAdd)*SpeedOrienta ,(RPM + (SpeedAdd * -1))*SpeedOrienta);</span><br><span class="line">RPM = 0;</span><br><span class="line">SpeedAdd = 0;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">SW_RPM_Move(0, 0, 0);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;舵轮代码&quot;&gt;&lt;a href=&quot;#舵轮代码&quot; class=&quot;headerlink&quot; title=&quot;舵轮代码&quot;&gt;&lt;/a&gt;舵轮代码&lt;/h2&gt;&lt;p&gt;目前代码给我印象是各个轮子分开控制，和1代舵轮一样都是无优弧劣弧处理，反转需要舵转动180°。3轮头舵轮做转向作用。无运动模</summary>
      
    
    
    
    
    <category term="RC" scheme="https://1370773758.github.io/tags/RC/"/>
    
    <category term="机器人" scheme="https://1370773758.github.io/tags/%E6%9C%BA%E5%99%A8%E4%BA%BA/"/>
    
  </entry>
  
  <entry>
    <title>ROS与STM32通讯</title>
    <link href="https://1370773758.github.io/2022/03/24/ROS%E4%B8%8ESTM32%E9%80%9A%E8%AE%AF/ROS%E4%B8%8ESTM32%E9%80%9A%E8%AE%AF/"/>
    <id>https://1370773758.github.io/2022/03/24/ROS%E4%B8%8ESTM32%E9%80%9A%E8%AE%AF/ROS%E4%B8%8ESTM32%E9%80%9A%E8%AE%AF/</id>
    <published>2022-03-24T08:51:46.290Z</published>
    <updated>2022-03-24T11:17:02.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>一般识别的端口都是ttyUSB<em>，但像STM32芯片的，会识别成ttyACM</em>端口，但没太大关系，改就行了。<br>在运行前可以打开cutecom来查看是否有数据，但记得要给权限。</p><span id="more"></span><!-- more --><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo cutecom</span><br></pre></td></tr></table></figure><p><img src="/2022/03/24/ROS%E4%B8%8ESTM32%E9%80%9A%E8%AE%AF/ROS%E9%80%9A%E8%AE%AF%E7%BB%93%E6%9E%9C.png" alt="ROS通讯结果"></p><h2 id="ROS代码"><a href="#ROS代码" class="headerlink" title="ROS代码"></a>ROS代码</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#include &lt;ros/ros.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;serial/serial.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;iostream&gt;</span></span><br><span class="line">int main(int argc, char** argv)</span><br><span class="line">&#123;</span><br><span class="line">    ros::init(argc, argv, <span class="string">&quot;serial_port&quot;</span>);</span><br><span class="line">    //创建句柄（虽然后面没用到这个句柄，但如果不创建，运行时进程会出错）</span><br><span class="line">    ros::NodeHandle n;</span><br><span class="line">    //创建一个serial类</span><br><span class="line">    serial::Serial sp;</span><br><span class="line">    //创建<span class="built_in">timeout</span></span><br><span class="line">    serial::Timeout to = serial::Timeout::simpleTimeout(100);</span><br><span class="line">    //设置要打开的串口名称</span><br><span class="line">    sp.setPort(<span class="string">&quot;/dev/ttyACM0&quot;</span>);</span><br><span class="line">    //设置串口通信的波特率</span><br><span class="line">    sp.setBaudrate(115200);</span><br><span class="line">    //串口设置<span class="built_in">timeout</span></span><br><span class="line">    sp.setTimeout(to);</span><br><span class="line"></span><br><span class="line">    // try</span><br><span class="line">    // &#123;</span><br><span class="line">        //打开串口</span><br><span class="line">    sp.open();</span><br><span class="line">    // &#125;</span><br><span class="line">    // catch(serial::IOException&amp; e)</span><br><span class="line">    // &#123;</span><br><span class="line">    //     ROS_ERROR_STREAM(<span class="string">&quot;Unable to open port.&quot;</span>);</span><br><span class="line">    //     <span class="built_in">return</span> -1;</span><br><span class="line">    // &#125;</span><br><span class="line"></span><br><span class="line">    //判断串口是否打开成功</span><br><span class="line">    <span class="keyword">if</span>(sp.isOpen())</span><br><span class="line">    &#123;</span><br><span class="line">        ROS_INFO_STREAM(<span class="string">&quot;/dev/ttyUSB0 is opened.&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">return</span> -1;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    ros::Rate loop_rate(500);</span><br><span class="line">    <span class="keyword">while</span>(ros::ok())</span><br><span class="line">    &#123;</span><br><span class="line">        //获取缓冲区内的字节数</span><br><span class="line">        size_t n = sp.available();</span><br><span class="line">        <span class="keyword">if</span>(n!=0)</span><br><span class="line">        &#123;</span><br><span class="line">            uint8_t buffer[1024];</span><br><span class="line">            //读出数据</span><br><span class="line">            n = sp.read(buffer, n);</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">for</span>(int i=0; i&lt;n; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                //16进制的方式打印到屏幕</span><br><span class="line">                std::cout &lt;&lt; <span class="string">std::hex &lt;&lt; (buffer[i] &amp; 0xff) &lt;&lt; &quot; &quot;;</span></span><br><span class="line"><span class="string">            &#125;</span></span><br><span class="line"><span class="string">            std</span>::cout &lt;&lt; <span class="string">std::endl;</span></span><br><span class="line"><span class="string">            //把数据发送回去</span></span><br><span class="line"><span class="string">            //sp.write(buffer, n);</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">        loop_rate.sleep();</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    //关闭串口</span></span><br><span class="line"><span class="string">    sp.close();</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    return 0;</span></span><br><span class="line"><span class="string">&#125;</span></span><br></pre></td></tr></table></figure><h2 id="STM32代码"><a href="#STM32代码" class="headerlink" title="STM32代码"></a>STM32代码</h2><h2 id="执行效果"><a href="#执行效果" class="headerlink" title="执行效果"></a>执行效果</h2><p>在执行前，需要给端口权限，再进行cpp的运行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo <span class="built_in">chmod</span> 777 /dev/ttyACM*</span><br></pre></td></tr></table></figure><p>ps: 在每次文件更改后记得catkin_make下<br><img src="/2022/03/24/ROS%E4%B8%8ESTM32%E9%80%9A%E8%AE%AF/%E8%BF%90%E8%A1%8C%E7%BB%93%E6%9E%9C.png" alt="运行结果"></p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;一般识别的端口都是ttyUSB&lt;em&gt;，但像STM32芯片的，会识别成ttyACM&lt;/em&gt;端口，但没太大关系，改就行了。&lt;br&gt;在运行前可以打开cutecom来查看是否有数据，但记得要给权限。&lt;/p&gt;</summary>
    
    
    
    
    <category term="ROS" scheme="https://1370773758.github.io/tags/ROS/"/>
    
    <category term="C++" scheme="https://1370773758.github.io/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>OpenCV  人脸识别</title>
    <link href="https://1370773758.github.io/2022/03/23/opencv%E4%B9%8B%E4%BA%BA%E8%84%B8%E8%AF%86%E5%88%AB/opencv%E4%B9%8B%E4%BA%BA%E8%84%B8%E8%AF%86%E5%88%AB/"/>
    <id>https://1370773758.github.io/2022/03/23/opencv%E4%B9%8B%E4%BA%BA%E8%84%B8%E8%AF%86%E5%88%AB/opencv%E4%B9%8B%E4%BA%BA%E8%84%B8%E8%AF%86%E5%88%AB/</id>
    <published>2022-03-23T08:10:40.240Z</published>
    <updated>2022-03-24T10:31:46.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><h2 id="运行结果"><a href="#运行结果" class="headerlink" title="运行结果"></a>运行结果</h2>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;h2 id=&quot;代码&quot;&gt;&lt;a href=&quot;#代码&quot; class=&quot;headerlink&quot; title=&quot;代码&quot;&gt;&lt;/a&gt;代码&lt;/h2&gt;&lt;h2 id</summary>
      
    
    
    
    
    <category term="opencv" scheme="https://1370773758.github.io/tags/opencv/"/>
    
    <category term="python" scheme="https://1370773758.github.io/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>数字舵机</title>
    <link href="https://1370773758.github.io/2022/03/23/%E6%95%B0%E5%AD%97%E8%88%B5%E6%9C%BA/"/>
    <id>https://1370773758.github.io/2022/03/23/%E6%95%B0%E5%AD%97%E8%88%B5%E6%9C%BA/</id>
    <published>2022-03-23T05:16:19.980Z</published>
    <updated>2022-03-24T11:19:02.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>[机器人伺服舵机_北京智能佳科技有限公司-中国智能服务机器人领域的专业制造者] (bjrobot.com) 官网 中国代理</p><span id="more"></span><p><img src="/2022/03/23/%E6%95%B0%E5%AD%97%E8%88%B5%E6%9C%BA/MX106%E5%9B%BE.png" alt="数字舵机图"><br>现在队里用的是MX系列舵机，大致有MX-64、MX-106两种，有着更大扭矩，内置位置pid，可断电记忆等,<br>串行总线好处是能做到一个串口控制很多个舵机，只要把舵机设置好id就行。<br>目前在机器狗上和20届R1夹子抬升上使用。</p><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p>将c文件和h文件移植过去修改当模块用就行。</p><h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><h4 id="目前只能发送，不能接收，而且是485协议，需要一个485转ttl模块来使用。"><a href="#目前只能发送，不能接收，而且是485协议，需要一个485转ttl模块来使用。" class="headerlink" title="目前只能发送，不能接收，而且是485协议，需要一个485转ttl模块来使用。"></a>目前只能发送，不能接收，而且是485协议，需要一个485转ttl模块来使用。</h4><h4 id="不能放在循环里连续发，会卡住，要做出判断出发一次。"><a href="#不能放在循环里连续发，会卡住，要做出判断出发一次。" class="headerlink" title="不能放在循环里连续发，会卡住，要做出判断出发一次。"></a>不能放在循环里连续发，会卡住，要做出判断出发一次。</h4><h4 id="发一次的话可能会丢包，这边使用的时候是在代码里循环，我试的时候是10次，煜烽是100次。"><a href="#发一次的话可能会丢包，这边使用的时候是在代码里循环，我试的时候是10次，煜烽是100次。" class="headerlink" title="发一次的话可能会丢包，这边使用的时候是在代码里循环，我试的时候是10次，煜烽是100次。"></a>发一次的话可能会丢包，这边使用的时候是在代码里循环，我试的时候是10次，煜烽是100次。</h4><h4 id="只能用铜线做延长，不然可能会出现动不了的情况。"><a href="#只能用铜线做延长，不然可能会出现动不了的情况。" class="headerlink" title="只能用铜线做延长，不然可能会出现动不了的情况。"></a>只能用铜线做延长，不然可能会出现动不了的情况。</h4><h4 id="位置控制没过零处理"><a href="#位置控制没过零处理" class="headerlink" title="位置控制没过零处理"></a>位置控制没过零处理</h4><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;[机器人伺服舵机_北京智能佳科技有限公司-中国智能服务机器人领域的专业制造者] (bjrobot.com) 官网 中国代理&lt;/p&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>双系统的安装</title>
    <link href="https://1370773758.github.io/2022/03/22/%E5%8F%8C%E7%B3%BB%E7%BB%9F%E7%9A%84%E5%AE%89%E8%A3%85/"/>
    <id>https://1370773758.github.io/2022/03/22/%E5%8F%8C%E7%B3%BB%E7%BB%9F%E7%9A%84%E5%AE%89%E8%A3%85/</id>
    <published>2022-03-22T03:57:16.620Z</published>
    <updated>2022-03-22T04:10:06.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="参考连接"><a href="#参考连接" class="headerlink" title="参考连接"></a>参考连接</h3><p><a href="https://blog.csdn.net/fanxueya1322/article/details/90205143">https://blog.csdn.net/fanxueya1322/article/details/90205143</a></p><h3 id="修改"><a href="#修改" class="headerlink" title="修改"></a>修改</h3><p>在重启前需要关闭电脑的快速启动功能，在BIOS界面关闭也行</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;参考连接&quot;&gt;&lt;a href=&quot;#参考连接&quot; class=&quot;headerlink&quot; title=&quot;参考连接&quot;&gt;&lt;/a&gt;参考连接&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;https://blog.csdn.net/fanxueya1322/article/details/90</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>气缸气阀</title>
    <link href="https://1370773758.github.io/2022/03/22/%E6%B0%94%E7%BC%B8%E6%B0%94%E9%98%80/%E6%B0%94%E7%BC%B8%E6%B0%94%E9%98%80/"/>
    <id>https://1370773758.github.io/2022/03/22/%E6%B0%94%E7%BC%B8%E6%B0%94%E9%98%80/%E6%B0%94%E7%BC%B8%E6%B0%94%E9%98%80/</id>
    <published>2022-03-22T03:10:40.350Z</published>
    <updated>2022-03-22T03:35:56.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>在RC的比赛上，气的使用是需要掌握的第一要素，气的加入能极大的减小机构的复杂程度。</p><p>队里有自己做的气缸控制阀，虽然他有点问题，还容易炸，但确实好用。能做到1个can口控制8路的气缸<br>ps：实际上不能控制8路，容易炸。</p><h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><p>队里有专门的说明文档，还有使用代码，在需要用的地方使用就行。</p><h3 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h3><p>现在的芯片越来越贵，F1c8t6都能上200，发家致富了属于是，加上气缸控制板还有点问题，大电流一上就炸，但没办法硬件缺人，加上现在板子的设计还有点问题，后面可能用MOS管如何IO口去控制，这也是无奈之举。<br>大电流像气泵，不能直接由控制板去控制，会炸。用降压模块再接MOS管，板子IO口控制MOS管的PWM端。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;在RC的比赛上，气的使用是需要掌握的第一要素，气的加入能极大的减小机构的复杂程度。&lt;/p&gt;
&lt;p&gt;队里有自己做的气缸控制阀，虽然他有点问题，</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Maxon电机</title>
    <link href="https://1370773758.github.io/2022/03/22/Maxon%E7%94%B5%E6%9C%BA/Maxon%E7%94%B5%E6%9C%BA/"/>
    <id>https://1370773758.github.io/2022/03/22/Maxon%E7%94%B5%E6%9C%BA/Maxon%E7%94%B5%E6%9C%BA/</id>
    <published>2022-03-22T03:02:25.550Z</published>
    <updated>2022-03-22T03:55:26.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="掌握内容"><a href="#掌握内容" class="headerlink" title="掌握内容"></a>掌握内容</h3><h3 id="Maxon官网"><a href="#Maxon官网" class="headerlink" title="Maxon官网"></a>Maxon官网</h3><p><a href="https://www.maxongroup.com.cn/maxon/view/content/index">Maxon官网</a></p><h3 id="查找电机性能"><a href="#查找电机性能" class="headerlink" title="查找电机性能"></a>查找电机性能</h3><p>在Maxon官网的搜索框里，用电机后面的产品编码进行查找，如果官网的数据不够详细的话，可以到<a href="https://pan.baidu.com/s/1WPG09Du_tOoACEEPKs65FA">Maxon选型里面查找</a>提取码：yt79</p><p>同样的搜索框搜索产品编码</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;掌握内容&quot;&gt;&lt;a href=&quot;#掌握内容&quot; class=&quot;headerlink&quot; title=&quot;掌握内容&quot;&gt;&lt;/a&gt;掌握内容&lt;/h3&gt;&lt;h3 id=&quot;Maxon官网&quot;&gt;&lt;a href=&quot;#Maxon官网&quot; class=&quot;headerlink&quot; title=&quot;Max</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>RC日常</title>
    <link href="https://1370773758.github.io/2022/03/21/RC%E6%B5%8B%E8%AF%95%E6%97%A5%E5%B8%B8/RC%E6%B5%8B%E8%AF%95%E6%97%A5%E5%B8%B8/"/>
    <id>https://1370773758.github.io/2022/03/21/RC%E6%B5%8B%E8%AF%95%E6%97%A5%E5%B8%B8/RC%E6%B5%8B%E8%AF%95%E6%97%A5%E5%B8%B8/</id>
    <published>2022-03-21T15:29:19.180Z</published>
    <updated>2023-08-14T00:51:30.509Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>恭喜野狼队2023年robocon荣获亚军!!!</p><span id="more"></span><!-- more --><!-- ![R1伤痕累累](/2022/03/21/RC测试日常/R1伤痕累累.jpg) --><p><img src="/2022/03/21/RC%E6%B5%8B%E8%AF%95%E6%97%A5%E5%B8%B8/RC%E6%B5%8B%E8%AF%95%E6%97%A5%E5%B8%B8/R1%E4%BC%A4%E7%97%95%E7%B4%AF%E7%B4%AF.jpg" alt="R1伤痕累累"><br><img src="/2022/03/21/RC%E6%B5%8B%E8%AF%95%E6%97%A5%E5%B8%B8/RC%E6%B7%98%E5%AE%9D%E5%A1%94(%E4%B8%8D%E5%90%88%E6%A0%BC).jpg" alt="RC贵重物资"></p><h3 id="卧龙凤雏"><a href="#卧龙凤雏" class="headerlink" title="卧龙凤雏"></a>卧龙凤雏</h3><video src="/2022/03/21/RC测试日常/蜜汁夹取1.mp4" position="absolute" width="50%" height="50%" controls="controls"></video><video src="/2022/03/21/RC测试日常/蜜汁夹取2.mp4" position="absolute" width="50%" height="50%" controls="controls"></video><h3 id="步兵打球"><a href="#步兵打球" class="headerlink" title="步兵打球"></a>步兵打球</h3><video src="/2022/03/21/RC测试日常/步兵打球.mp4" position="absolute" width="50%" height="50%" controls="controls"></video><h3 id="一代摩擦轮测试"><a href="#一代摩擦轮测试" class="headerlink" title="一代摩擦轮测试"></a>一代摩擦轮测试</h3><video src="/2022/03/21/RC测试日常/一代摩擦轮测试.mp4" position="absolute" width="50%" height="50%" controls="controls"></video><h2 id="比赛结语"><a href="#比赛结语" class="headerlink" title="比赛结语"></a>比赛结语</h2><p>为期一年的比赛生涯在匆忙中也是结束了，全国一等奖，第九名，也是对自己有个交待了，纵使结果的未达最理想的状态，状况百出。队伍之间的问题也是一堆<br>但随着比赛的结束也暂时划上一个句号。<br>赛前都是闭门造车，但好在有和其他几个学校进行交流，勉强在赛前做到一个比较好的状态，这个博客在之前写了好些不满的话语，我也随着删掉了。<br>遗憾的是这次上线上的比赛，但好在没出现过和之前打RCUA那样什么忙都没帮上，这次好歹也是R1主力了。<br><img src="/2022/03/21/RC%E6%B5%8B%E8%AF%95%E6%97%A5%E5%B8%B8/R1%E6%9C%80%E7%BB%88%E7%89%88.jpg" alt="R1最终版"><br>赛后才知道与顶尖的高校之间的差距有多么的大，但今年都是有经验的人来接手，倒不至于和我一样的半吊子了。</p><p>打完比赛之后确实迷茫不知道要做什么，浑浑噩噩忙了一年就大四了，马上就是要步入社会的人，但做什么都没有动力。<br>目前手上有一个毕设在做，因为想多学点东西选择了四轴加上视觉方案，相比一般的毕设难度就多了，但也比较综合<br>软件、硬件和视觉都有用上。<br>暂时往这个项目继续努力。</p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;恭喜野狼队2023年robocon荣获亚军!!!&lt;/p&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>RoboModle电调</title>
    <link href="https://1370773758.github.io/2022/03/21/RoboModle%E7%94%B5%E8%B0%83/RoboModle%E7%94%B5%E8%B0%83/"/>
    <id>https://1370773758.github.io/2022/03/21/RoboModle%E7%94%B5%E8%B0%83/RoboModle%E7%94%B5%E8%B0%83/</id>
    <published>2022-03-21T12:49:11.350Z</published>
    <updated>2022-03-23T08:24:18.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="官网网站"><a href="#官网网站" class="headerlink" title="官网网站"></a>官网网站</h3><p><a href="http://www.robomodule.net/download.html">robomodule官网</a><br>里面的资料基本齐全，跟着做一遍你就懂得如何去操控他了</p><span id="more"></span><h3 id="淘宝连接"><a href="#淘宝连接" class="headerlink" title="淘宝连接"></a>淘宝连接</h3><p><a href="https://shop109954302.taobao.com/shop/view_shop.htm?spm=a1z0k.7385961.0.0.e44912caxDdDmK&shop_id=109954302">robomodule淘宝</a></p><h3 id="连接图"><a href="#连接图" class="headerlink" title="连接图"></a>连接图</h3><p><img src="/2022/03/21/RoboModle%E7%94%B5%E8%B0%83/%E5%A4%9A%E4%B8%AA%E8%BF%9E%E6%8E%A5%E7%A4%BA%E6%84%8F%E5%9B%BE.png" alt="多个连接示意图"></p><p><img src="/2022/03/21/RoboModle%E7%94%B5%E8%B0%83/%E6%8E%A5%E7%BA%BF%E5%9B%BE.png" alt="接线图"><br><img src="/2022/03/21/RoboModle%E7%94%B5%E8%B0%83/%E6%8E%A8%E8%8D%90%E7%9A%84%E8%BF%9E%E6%8E%A5%E6%96%B9%E5%BC%8F.png" alt="推荐的连接方式"></p><h3 id="存在问题"><a href="#存在问题" class="headerlink" title="存在问题"></a>存在问题</h3><p>20届比赛反馈电池电量变化会导致射箭出现偏差<br>这个是用来操控Maxon电机的，Maxon电机在RC比赛中很受欢迎，虽然他是有刷的，但在同等机构上，更有力的电机能让你在时长上存在更大的优势。</p>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;官网网站&quot;&gt;&lt;a href=&quot;#官网网站&quot; class=&quot;headerlink&quot; title=&quot;官网网站&quot;&gt;&lt;/a&gt;官网网站&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;http://www.robomodule.net/download.html&quot;&gt;robomodule官网&lt;/a&gt;&lt;br&gt;里面的资料基本齐全，跟着做一遍你就懂得如何去操控他了&lt;/p&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://1370773758.github.io/2022/03/21/%E4%B8%9C%E5%A4%A7%E5%85%A8%E5%9C%BA%E5%AE%9A%E4%BD%8D/%E4%B8%9C%E5%A4%A7%E5%85%A8%E5%9C%BA%E5%AE%9A%E4%BD%8D/"/>
    <id>https://1370773758.github.io/2022/03/21/%E4%B8%9C%E5%A4%A7%E5%85%A8%E5%9C%BA%E5%AE%9A%E4%BD%8D/%E4%B8%9C%E5%A4%A7%E5%85%A8%E5%9C%BA%E5%AE%9A%E4%BD%8D/</id>
    <published>2022-03-21T11:49:55.410Z</published>
    <updated>2022-03-21T11:49:56.000Z</updated>
    
    
    
    
    
  </entry>
  
  <entry>
    <title>本杰明电调</title>
    <link href="https://1370773758.github.io/2022/03/21/%E6%9C%AC%E6%9D%B0%E6%98%8E%E7%94%B5%E8%B0%83/"/>
    <id>https://1370773758.github.io/2022/03/21/%E6%9C%AC%E6%9D%B0%E6%98%8E%E7%94%B5%E8%B0%83/</id>
    <published>2022-03-21T11:48:33.600Z</published>
    <updated>2022-03-23T08:25:02.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="上位机"><a href="#上位机" class="headerlink" title="上位机"></a>上位机</h2><p>上位机下载地址：<a href="https://pan.baidu.com/s/1zPXDUBxxmZMv5BzmYccsGw">直视我，崽种</a><br>提取码：5pig</p><span id="more"></span><h2 id="淘宝连接"><a href="#淘宝连接" class="headerlink" title="淘宝连接"></a>淘宝连接</h2><h3 id="Maker-X"><a href="#Maker-X" class="headerlink" title="Maker X"></a>Maker X</h3><p><a href="https://shop224105070.taobao.com/shop/view_shop.htm?spm=a1z0k.7385961.0.0.e44912caxDdDmK&shop_id=224105070">淘宝店</a><br><a href="https://item.taobao.com/item.htm?spm=a1z10.1-c-s.w4004-18303831390.26.70c7822exkh8XB&id=612252645332">商品连接</a><br>随着芯片的涨价，这个电调也是开始涨了，本来500就能入手，现在要到700。</p><h3 id="YONG"><a href="#YONG" class="headerlink" title="YONG"></a>YONG</h3><p><a href="https://item.taobao.com/item.htm?spm=a230r.1.14.16.4c2d58bfKlLzWJ&id=593378046332&ns=1&abbucket=16#detail">商品连接</a></p><p>目前就这两款，挑选合适的就行了</p><h2 id="资料"><a href="#资料" class="headerlink" title="资料"></a>资料</h2><p>链接：<a href="https://pan.baidu.com/s/1GvCDYi5POkk_DSfrpzfA2Q">https://pan.baidu.com/s/1GvCDYi5POkk_DSfrpzfA2Q</a><br>提取码：opep</p><h2 id="STM32代码"><a href="#STM32代码" class="headerlink" title="STM32代码"></a>STM32代码</h2><p>这东西看代码就行，通用的，直接拉过来用。</p><h2 id="存在问题"><a href="#存在问题" class="headerlink" title="存在问题"></a>存在问题</h2><p>大的问题目前没有，但小的问题一大堆。</p><h3 id="猛加速启动的时候会有噪声"><a href="#猛加速启动的时候会有噪声" class="headerlink" title="猛加速启动的时候会有噪声"></a>猛加速启动的时候会有噪声</h3><p>加个斜坡函数就行</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;上位机&quot;&gt;&lt;a href=&quot;#上位机&quot; class=&quot;headerlink&quot; title=&quot;上位机&quot;&gt;&lt;/a&gt;上位机&lt;/h2&gt;&lt;p&gt;上位机下载地址：&lt;a href=&quot;https://pan.baidu.com/s/1zPXDUBxxmZMv5BzmYccsGw&quot;&gt;直视我，崽种&lt;/a&gt;&lt;br&gt;提取码：5pig&lt;/p&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>舵轮的运动解算</title>
    <link href="https://1370773758.github.io/2022/03/21/%E8%88%B5%E8%BD%AE%E8%BF%90%E5%8A%A8%E8%A7%A3%E7%AE%97/"/>
    <id>https://1370773758.github.io/2022/03/21/%E8%88%B5%E8%BD%AE%E8%BF%90%E5%8A%A8%E8%A7%A3%E7%AE%97/</id>
    <published>2022-03-21T11:23:49.940Z</published>
    <updated>2022-03-26T02:47:09.587Z</updated>
    
    <content type="html"><![CDATA[<h2 id="舵轮解算"><a href="#舵轮解算" class="headerlink" title="舵轮解算"></a>舵轮解算</h2><h3 id="煜烽舵轮代码"><a href="#煜烽舵轮代码" class="headerlink" title="煜烽舵轮代码"></a>煜烽舵轮代码</h3><p>可以说是东大18舵轮的简易版，相比东大以x，y位置和速度解算，现在只是单速度运动解算。这份代码可以算是队里的1版舵轮了吧。<br>实现的效果就是3个轮子都当成一个整体。转过180°的时候不会自动取反，自旋得等到各自轮子转到固定的位置。<br>而对于全场定位的数据来说，就是外接一个位置环，将速度的控制改为位置的控制。</p><span id="more"></span><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line">  * @brief  舵轮速度解算</span><br><span class="line">  * @param[<span class="keyword">in</span>]  Vxx轴速度</span><br><span class="line">  *VOmega自转速度</span><br><span class="line">  * @param[out]Speed速度</span><br><span class="line">  * @retval None</span><br><span class="line">  */</span><br><span class="line">void HelmCalculate(<span class="built_in">float</span> *Vx,<span class="built_in">float</span> *Vy,<span class="built_in">float</span> *VOMEGA, Encoder_t *Position)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">float</span> Angle=atan2(*Vx,*Vy);</span><br><span class="line">Chassis.O_L_Angle =Chassis.O_Angle;</span><br><span class="line">Chassis.O_Angle = degrees(Angle);  // 弧度转角度</span><br><span class="line">//圈数叠加</span><br><span class="line"><span class="keyword">if</span> ((Chassis.O_Angle- Chassis.O_L_Angle) &lt; 170) &#123;</span><br><span class="line">Chassis.turnCount++;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ((Chassis.O_L_Angle - Chassis.O_Angle) &lt; 170) &#123;</span><br><span class="line">Chassis.turnCount--;&#125;</span><br><span class="line"></span><br><span class="line">Chassis.O_T_Angle = Chassis.O_Angle + (360 * Chassis.turnCount);</span><br><span class="line">//VAL_LIMIT(Chassis.O_T_Angle, -720,720);//角度限制</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(*VOMEGA&lt;0)&#123;</span><br><span class="line">Position[0].targetAngle = temp_Position[0] + ENCODER_TO_ANGLE((Chassis.O_T_Angle+30)   *3.0f);</span><br><span class="line">Position[1].targetAngle = temp_Position[1] + ENCODER_TO_ANGLE((Chassis.O_T_Angle+120) *3.0f);</span><br><span class="line">Position[2].targetAngle = temp_Position[2] + ENCODER_TO_ANGLE((Chassis.O_T_Angle-90)  *3.0f);</span><br><span class="line">BJM[0].status_msg.rpm = -*VOMEGA *8.0f;</span><br><span class="line">BJM[1].status_msg.rpm = *VOMEGA *8.0f;</span><br><span class="line">BJM[2].status_msg.rpm = -*VOMEGA *8.0f;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(*VOMEGA&gt;0)&#123;</span><br><span class="line">Position[0].targetAngle = temp_Position[0] + ENCODER_TO_ANGLE((Chassis.O_T_Angle-120)*3.0f);</span><br><span class="line">Position[1].targetAngle = temp_Position[1] + ENCODER_TO_ANGLE((Chassis.O_T_Angle+30)*3.0f);</span><br><span class="line">Position[2].targetAngle = temp_Position[2] + ENCODER_TO_ANGLE((Chassis.O_T_Angle+90)*3.0f);</span><br><span class="line">BJM[0].status_msg.rpm = *VOMEGA *8.0f;</span><br><span class="line">BJM[1].status_msg.rpm = *VOMEGA *8.0f;</span><br><span class="line">BJM[2].status_msg.rpm = *VOMEGA *8.0f;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">for</span> (int i = 0; i &lt; 4; i++)</span><br><span class="line">&#123; </span><br><span class="line">    Position[i].targetAngle = temp_Position[i]  + ENCODER_TO_ANGLE((Chassis.O_T_Angle) *3.0f);//减速比1比3</span><br><span class="line"><span class="built_in">float</span> O_Speed =(pow(*Vy,2)+pow(*Vx,2));</span><br><span class="line">BJM[i].status_msg.rpm = sqrt(O_Speed);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">//<span class="keyword">if</span>(*Vy !=0 &amp;&amp; *VOMEGA  !=0)&#123;</span><br><span class="line">//<span class="keyword">for</span> (int i = 0; i &lt; 4; i++) &#123;</span><br><span class="line">//   </span><br><span class="line">//Position[i].targetAngle = temp_Position[i]  + *VOMEGA*9.309f ;</span><br><span class="line">//VAL_LIMIT(Position[i].targetAngle, 20000,180000);//角度限制</span><br><span class="line">//</span><br><span class="line">//&#125;</span><br><span class="line">//&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="z舵轮代码"><a href="#z舵轮代码" class="headerlink" title="z舵轮代码"></a>z舵轮代码</h3><p>基于煜烽代码进行改进。<br>实现的效果，有优弧劣弧处理，自动算出各个轮子到目标角度的最小距离，并判断轮子正反。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br></pre></td><td class="code"><pre><span class="line">void AGV_Calculate(<span class="built_in">float</span> *Vx, <span class="built_in">float</span> *Vy,<span class="built_in">float</span> *VOMEGA)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(*Vx == 0 &amp;&amp; *Vy == 0 &amp;&amp; *VOMEGA == 0) <span class="built_in">return</span>;</span><br><span class="line"><span class="built_in">float</span> AGV_SpeedComposition[3] = &#123;0&#125;;</span><br><span class="line"></span><br><span class="line"><span class="built_in">float</span> Vx_Vw[3] = &#123;0&#125;;//叠加的速度</span><br><span class="line"><span class="built_in">float</span> Vy_Vw[3] = &#123;0&#125;;</span><br><span class="line"></span><br><span class="line">int8_t Spped_direction[3] = &#123;0&#125;;</span><br><span class="line"></span><br><span class="line">/* 自旋叠加 */</span><br><span class="line"><span class="keyword">if</span>(*VOMEGA &lt; 0 )</span><br><span class="line">&#123;</span><br><span class="line">Vx_Vw[0] = *Vx + abs(*VOMEGA);</span><br><span class="line">Vy_Vw[0] = *Vy;</span><br><span class="line"></span><br><span class="line">Vx_Vw[1] = *Vx - abs(*VOMEGA) * cos(radians(60));</span><br><span class="line">Vy_Vw[1] = *Vy + abs(*VOMEGA) * sin(radians(60));</span><br><span class="line"></span><br><span class="line">Vx_Vw[2] = *Vx - abs(*VOMEGA) * sin(radians(30));</span><br><span class="line">Vy_Vw[2] = *Vy - abs(*VOMEGA) * cos(radians(30));</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(*VOMEGA &gt; 0)</span><br><span class="line">&#123;</span><br><span class="line">Vx_Vw[0] = *Vx - abs(*VOMEGA);</span><br><span class="line">Vy_Vw[0] = *Vy;</span><br><span class="line"></span><br><span class="line">Vx_Vw[1] = *Vx + abs(*VOMEGA) * cos(radians(30));</span><br><span class="line">Vy_Vw[1] = *Vy - abs(*VOMEGA) * sin(radians(30));</span><br><span class="line"></span><br><span class="line">Vx_Vw[2] = *Vx + abs(*VOMEGA) * cos(radians(60));</span><br><span class="line">Vy_Vw[2] = *Vy + abs(*VOMEGA) * sin(radians(60));</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">Vx_Vw[0] = *Vx;</span><br><span class="line">Vx_Vw[1] = *Vx;</span><br><span class="line">Vx_Vw[2] = *Vx;</span><br><span class="line"></span><br><span class="line">Vy_Vw[0] = *Vy;</span><br><span class="line">Vy_Vw[1] = *Vy;</span><br><span class="line">Vy_Vw[2] = *Vy;</span><br><span class="line">&#125;</span><br><span class="line">/* =================================================================================================== */</span><br><span class="line"><span class="keyword">for</span>(uint8_t i =0;i&lt;3;i++)</span><br><span class="line">&#123;</span><br><span class="line">Chassis.Chassis_angle_Last[i] = Chassis.Chassis_angle[i];</span><br><span class="line"></span><br><span class="line">Chassis.Chassis_angle[i] = degrees(atan2(Vx_Vw[i],Vy_Vw[i]));   //速度分解角度</span><br><span class="line"></span><br><span class="line">// 确保劣弧的存在</span><br><span class="line">Chassis.Chassis_angle[i] = Inferior_arc(Chassis.Chassis_angle[i],Chassis.Chassis_angle_Last[i],&amp;Spped_direction[i]);</span><br><span class="line">//判断速度是否反向</span><br><span class="line">//Spped_direction[i] = VGA_Speed_Diretion(Chassis.Chassis_angle[i],Chassis.Chassis_angle_Last[i]);</span><br><span class="line">//过零处理</span><br><span class="line"><span class="keyword">if</span>(Chassis.Chassis_angle[i] - Chassis.Chassis_angle_Last[i] &lt; -180.0f)</span><br><span class="line">&#123;</span><br><span class="line">Chassis.Chassis_turncount[i] ++ ;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(Chassis.Chassis_angle[i] - Chassis.Chassis_angle_Last[i] &gt; 180.0f)</span><br><span class="line">&#123;</span><br><span class="line">Chassis.Chassis_turncount[i] -- ;</span><br><span class="line">&#125;</span><br><span class="line">Chassis.Chassis_Target_angle[i] = Chassis.Chassis_angle[i] + (360.0f * Chassis.Chassis_turncount[i]);</span><br><span class="line"></span><br><span class="line">AGV_SpeedComposition[i] = sqrt(sq(Vx_Vw[i])+sq(Vy_Vw[i])); //速度合成</span><br><span class="line">//舵轮角度等于初始角度加上转动的角度</span><br><span class="line">/* 转向舵赋值 */</span><br><span class="line">Encoder[i].angle_pid.Target = Encoder_start[i] + ENCODER_TO_ANGLE(Chassis.Chassis_Target_angle[i]*AGV_reduction_ratio);</span><br><span class="line"></span><br><span class="line">//AGV_SpeedComposition[i] = AGV_SpeedComposition[i];</span><br><span class="line"></span><br><span class="line">//速度限幅</span><br><span class="line">VAL_LIMIT(AGV_SpeedComposition[i],-30000.0f,30000.0f);</span><br><span class="line"></span><br><span class="line">/* 斜坡最低限幅900 */</span><br><span class="line">//Chassis.Chassis_target_speed[i] = RAMP_Output(AGV_SpeedComposition[i],BJM[i].status_msg.rpm,200);</span><br><span class="line">Chassis.Chassis_target_speed[i] = AGV_SpeedComposition[i];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/* =================================================================================================== */</span><br><span class="line">//驱动轮速度</span><br><span class="line"></span><br><span class="line">//bjm_speed[0] = -RAMP_Output(bjm_speed[0],AGV_SpeedComposition[0],500) * Spped_direction[0];</span><br><span class="line">//bjm_speed[1] = -RAMP_Output(bjm_speed[1],AGV_SpeedComposition[1],500) * Spped_direction[1];</span><br><span class="line">//bjm_speed[2] = -RAMP_Output(bjm_speed[2],AGV_SpeedComposition[2],500) * Spped_direction[2];</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">bjm_speed[0] =  Chassis.Chassis_target_speed[0] * Spped_direction[0] * Chassis.chassis_wheel_count[0];</span><br><span class="line">bjm_speed[1] = Chassis.Chassis_target_speed[1] * Spped_direction[1] * Chassis.chassis_wheel_count[1];</span><br><span class="line">bjm_speed[2] =Chassis.Chassis_target_speed[2] * Spped_direction[2] * Chassis.chassis_wheel_count[2];</span><br><span class="line">&#125;</span><br><span class="line">/* ==============================舵轮运动模型函数===================================================================== */</span><br><span class="line">/**</span><br><span class="line">  * @brief          确保劣弧存在</span><br><span class="line">  * @param[<span class="keyword">in</span>]      Target_angle：目标角度</span><br><span class="line">Actual_angle：实际角度</span><br><span class="line">  * @retval         经过处理的目标角度</span><br><span class="line">  */</span><br><span class="line"><span class="built_in">float</span> Inferior_arc(<span class="built_in">float</span> Target_angle,<span class="built_in">float</span> Actual_angle,int8_t *agv_speed_dirction)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(Target_angle - Actual_angle &gt; 90.0f)</span><br><span class="line">&#123;</span><br><span class="line">*agv_speed_dirction = -1;</span><br><span class="line"><span class="built_in">return</span> (Target_angle - 180.0f);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(Target_angle - Actual_angle &lt; -90.0f)</span><br><span class="line">&#123;</span><br><span class="line">*agv_speed_dirction = -1;</span><br><span class="line"><span class="built_in">return</span> (Target_angle + 180.0f);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line">&#123;</span><br><span class="line">*agv_speed_dirction = 1;</span><br><span class="line"><span class="built_in">return</span> Target_angle;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line">  * @brief    返回舵轮转过的圈数</span><br><span class="line">  * @param[<span class="keyword">in</span>]   start_angle：起始编码器值</span><br><span class="line">Encoder_t：绝对式编码器的结构体</span><br><span class="line">  * @retval       转向舵的圈数</span><br><span class="line">  */</span><br><span class="line">int16_t VGA_Turns(<span class="built_in">float</span> start_angle , Encoder_t Encoder)</span><br><span class="line">&#123;</span><br><span class="line">int16_t VGA_turns = 0; //圈数</span><br><span class="line">VGA_turns = (int)(start_angle - Encoder.realAngle) % 4096;</span><br><span class="line"><span class="built_in">return</span> VGA_turns;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line">  * @brief    转向舵角度</span><br><span class="line">  * @param[<span class="keyword">in</span>]    start_angle：起始编码器值</span><br><span class="line">Encoder_t：绝对式编码器的结构体</span><br><span class="line">  * @retval       转向舵角度</span><br><span class="line">  */</span><br><span class="line"><span class="built_in">float</span> VGA_Pose(<span class="built_in">float</span> start_angle , Encoder_t Encoder)</span><br><span class="line">&#123;</span><br><span class="line">//初始角度值为0度</span><br><span class="line"><span class="built_in">float</span> VGA_angle;//舵角度</span><br><span class="line">int16_t VGA_turns; //圈数</span><br><span class="line">//舵转过的圈数等于 与起始角度的差值 进行求余</span><br><span class="line">VGA_turns = VGA_Turns(start_angle,Encoder);</span><br><span class="line">VGA_angle = ((Encoder.realAngle - VGA_turns*8191)/(8191* AGV_reduction_ratio))*360.0f;</span><br><span class="line"><span class="built_in">return</span> VGA_angle;</span><br><span class="line">&#125;</span><br><span class="line">/**</span><br><span class="line">  * @brief    VGA电机角度目标角与实际角差值</span><br><span class="line">  * @param[<span class="keyword">in</span>]    Target_angle：目标角度</span><br><span class="line">Actual_angle：实际角度</span><br><span class="line">  * @retval       角度之差</span><br><span class="line">  */</span><br><span class="line"><span class="built_in">float</span> VGA_Angle_Difference(<span class="built_in">float</span> Taeget_angele, <span class="built_in">float</span> Actual_angle)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">return</span> (Taeget_angele - Actual_angle);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line">  * @brief    判断VGA驱动轮电机是否需要反向</span><br><span class="line">  * @param[<span class="keyword">in</span>]    Target_angle：目标角度</span><br><span class="line">Actual_angle：实际角度</span><br><span class="line">  * @retval       </span><br><span class="line">  */</span><br><span class="line">int8_t VGA_Speed_Diretion(<span class="built_in">float</span> Taeget_angele, <span class="built_in">float</span> Actual_angle)</span><br><span class="line">&#123;</span><br><span class="line">int8_t VGA_flag = 1; //电机反向标志位 1：不反向  -1：反向</span><br><span class="line"><span class="keyword">if</span>(abs(Taeget_angele - Actual_angle) &gt; 120.0f)</span><br><span class="line">&#123;</span><br><span class="line">VGA_flag = -1;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">return</span> VGA_flag;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="问题的解决"><a href="#问题的解决" class="headerlink" title="问题的解决"></a>问题的解决</h2><h3 id="绝对式编码器超过2个就有一个不接收，拔插就好了"><a href="#绝对式编码器超过2个就有一个不接收，拔插就好了" class="headerlink" title="绝对式编码器超过2个就有一个不接收，拔插就好了"></a>绝对式编码器超过2个就有一个不接收，拔插就好了</h3><p>解决办法：厂家的代码问题，2个以上的编码器同时发送会造成ID错误，从而不接收，找到厂家进行升级就能解决。<br>但在我放假期间确实以一个很奇妙的方式解决了这个问题，就是2个编码器插在CAN1口(分开几个can口插入，中间隔着几个can设备)，剩下的插在CAN2口，就这样相安无事的度过几天后，李公子把线一拆，舵轮一升级就找不出如何复原的办法。所以最稳定的方法还是找厂家升级。<br>ps：好像应该放在编码器的文件讲，但现在想到了就先写着，等编码器那篇文章更新再进行迁移。</p><h3 id="舵轮启动的时候会有卡顿声"><a href="#舵轮启动的时候会有卡顿声" class="headerlink" title="舵轮启动的时候会有卡顿声"></a>舵轮启动的时候会有卡顿声</h3><p>这个我推测是因为本杰明编码器在底层上对于RPM值少于800的是不进行控制的，如果遥控器缓慢推进是不会有，所以怀疑是启动和停止时的加速度过大的原因，加个斜坡函数就行了。</p><h3 id="重启后，有一个轮子有概率反向"><a href="#重启后，有一个轮子有概率反向" class="headerlink" title="重启后，有一个轮子有概率反向"></a>重启后，有一个轮子有概率反向</h3><p>不知道这个问题解决没，本来我遇到这个问题怀疑是编码器的问题，因为50圈为最大值，减速比为4，除不尽，可能会出现过50圈后重启位置就对不上的问题，但后面测试的时候是有时候会出现一个轮子反向，我的解决方法是开机启动的时候用遥控器来做一个判断校准，即遥控器的某个按键按下，轮子其中一个就反向。<br>我这个方法姑且是解决了，但没完全解决。本来是考虑写进flash再读出来的，但频繁的写入也不太好操作。</p><h3 id="个人建议"><a href="#个人建议" class="headerlink" title="个人建议"></a>个人建议</h3><p>底盘还是得加斜坡函数，不然启动的时候会有很大的摩擦，对于上层机构很不友好。</p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;舵轮解算&quot;&gt;&lt;a href=&quot;#舵轮解算&quot; class=&quot;headerlink&quot; title=&quot;舵轮解算&quot;&gt;&lt;/a&gt;舵轮解算&lt;/h2&gt;&lt;h3 id=&quot;煜烽舵轮代码&quot;&gt;&lt;a href=&quot;#煜烽舵轮代码&quot; class=&quot;headerlink&quot; title=&quot;煜烽舵轮代码&quot;&gt;&lt;/a&gt;煜烽舵轮代码&lt;/h3&gt;&lt;p&gt;可以说是东大18舵轮的简易版，相比东大以x，y位置和速度解算，现在只是单速度运动解算。这份代码可以算是队里的1版舵轮了吧。&lt;br&gt;实现的效果就是3个轮子都当成一个整体。转过180°的时候不会自动取反，自旋得等到各自轮子转到固定的位置。&lt;br&gt;而对于全场定位的数据来说，就是外接一个位置环，将速度的控制改为位置的控制。&lt;/p&gt;</summary>
    
    
    
    
    <category term="RC" scheme="https://1370773758.github.io/tags/RC/"/>
    
    <category term="底盘" scheme="https://1370773758.github.io/tags/%E5%BA%95%E7%9B%98/"/>
    
  </entry>
  
  <entry>
    <title>激光测距DT35</title>
    <link href="https://1370773758.github.io/2022/03/21/DT35%E6%BF%80%E5%85%89%E6%B5%8B%E8%B7%9D%E6%A8%A1%E5%9D%97/DT35%E6%BF%80%E5%85%89%E6%B5%8B%E8%B7%9D%E6%A8%A1%E5%9D%97/"/>
    <id>https://1370773758.github.io/2022/03/21/DT35%E6%BF%80%E5%85%89%E6%B5%8B%E8%B7%9D%E6%A8%A1%E5%9D%97/DT35%E6%BF%80%E5%85%89%E6%B5%8B%E8%B7%9D%E6%A8%A1%E5%9D%97/</id>
    <published>2022-03-21T11:14:48.620Z</published>
    <updated>2022-03-24T10:30:00.000Z</updated>
    
    <content type="html"><![CDATA[<span id="more"></span><h2 id="资料"><a href="#资料" class="headerlink" title="资料"></a>资料</h2><p>链接：<a href="https://pan.baidu.com/s/1FC3gfKmwr-zowkHP5dArfg">https://pan.baidu.com/s/1FC3gfKmwr-zowkHP5dArfg</a><br>提取码：jehj</p><h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><h3 id="稳定性测试"><a href="#稳定性测试" class="headerlink" title="稳定性测试"></a>稳定性测试</h3><p>在0到5m的测试中，稳定是在2cm上下，加了个低通滤波后勉强在1cm以内。</p><h3 id="上车测试"><a href="#上车测试" class="headerlink" title="上车测试"></a>上车测试</h3><p>和舵轮连在同一个电源时，底盘的启动会导致激光测距的电压不稳。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;span id=&quot;more&quot;&gt;&lt;/span&gt;
&lt;h2 id=&quot;资料&quot;&gt;&lt;a href=&quot;#资料&quot; class=&quot;headerlink&quot; title=&quot;资料&quot;&gt;&lt;/a&gt;资料&lt;/h2&gt;&lt;p&gt;链接：&lt;a href=&quot;https://pan.baidu.com/s/1FC3gfKmwr</summary>
      
    
    
    
    
    <category term="RC" scheme="https://1370773758.github.io/tags/RC/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://1370773758.github.io/2022/03/20/hello-world/"/>
    <id>https://1370773758.github.io/2022/03/20/hello-world/</id>
    <published>2022-03-20T11:22:23.840Z</published>
    <updated>2022-10-13T16:18:11.424Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><span id="more"></span><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p><h2 id="hexo推送指令"><a href="#hexo推送指令" class="headerlink" title="hexo推送指令"></a>hexo推送指令</h2><p>hexo clean  ： 清理缓存<br>hexo g      ： 更新内容<br>hexo s      ： 推送到本地<br>hexo d      ： 推送到网站</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;</summary>
    
    
    
    
  </entry>
  
</feed>
